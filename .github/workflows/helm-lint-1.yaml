name: reusable workflows

on:
  release:
    types: [published]
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'charts/**'
  workflow_dispatch:
    inputs:
      IGNORE_CHARTS:
        description: 'Provide list of charts to be ignored separated by pipe(|)'
        required: false
        default: ''
        type: string
      CHART_PUBLISH:
        description: 'Chart publishing to gh-pages branch'
        required: false
        default: 'NO'
        type: string
      INCLUDE_ALL_CHARTS:
        description: 'Include all charts for Linting/Publishing (YES/NO)'
        required: false
        default: 'NO'
        type: string
  push:
    branches:
      - '!release-branch'
      - master
      - 1.*
      - develop
      - MOSIP*
      - release*
    paths:
      - 'charts/**'

env:
  IGNORE_CHARTS: "reporting|reporting-init|activemq-artemis"
  CHART_PUBLISH: "YES"
  CHARTS_DIR: "charts"
  INCLUDE_ALL_CHARTS: "NO"

jobs:
  lint-chart:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Validate Helm charts in Pull Requests
        run: |
          REPO_URL=${{ github.event.pull_request.base.repo.html_url }}
          BRANCH_NAME=${{ github.event.pull_request.base.ref }}
          git remote add upstream $REPO_URL.git
          git fetch upstream
          git remote -v 
          CHARTS_MODIFIED=$( git diff --name-status upstream/$BRANCH_NAME | awk -F '/' '/charts/{print $2}' | sort | uniq | sed -E 's/(\S+)/^&$/g' | tr ' ' '|' )
          cd ${{ env.CHARTS_DIR }}
          echo "CHARTS_MODIFIED : $CHARTS_MODIFIED "
          IGNORE_CHART_LIST=$( ls -d * | grep -Ev "$CHARTS_MODIFIED" |  sed ':a;N;$!ba;s/\n/|/g' )
          echo "IGNORE CHART LIST : $IGNORE_CHART_LIST "
          echo "IGNORE_CHARTS=$(echo $IGNORE_CHART_LIST )" >> $GITHUB_ENV
          echo "CHART_PUBLISH=NO" >> $GITHUB_ENV
        if: "${{ github.event_name == 'pull_request' }}"

      - name: Get helm charts list
        run: |
          CHARTS_MODIFIED=$( git log -m -1 --name-only --pretty="" | awk -F '/' '/charts/{print $2}' | sort | uniq | sed -E 's/(\S+)/^&$/g' | tr ' ' '|' )
          cd ${{ env.CHARTS_DIR }}
          echo "CHARTS_MODIFIED : $CHARTS_MODIFIED"
          IGNORE_CHART_LIST=$( echo "${{ env.IGNORE_CHARTS }}" )
          if [[ ${{ inputs.INCLUDE_ALL_CHARTS  || env.INCLUDE_ALL_CHARTS }} == "NO" ]]; then
             IGNORE_CHART_LIST=$( ls -d * | grep -Ev "$CHARTS_MODIFIED" |  sed ':a;N;$!ba;s/\n/|/g' )
          fi
          echo "IGNORE CHART LIST : $IGNORE_CHART_LIST "
          echo "IGNORE_CHARTS=$(echo $IGNORE_CHART_LIST )" >> $GITHUB_ENV
        if: "${{ github.event_name != 'pull_request' }}"

      - name: Validate / Publish Helm charts
        uses: syedsalman3753/syed-helm-gh-pages@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          charts_dir: ${{ env.CHARTS_DIR }}
          ignore_charts: "${{ inputs.IGNORE_CHARTS || env.IGNORE_CHARTS }}"
          chart_publish: "${{ inputs.CHART_PUBLISH || env.CHART_PUBLISH }}"

      # Commented below tasks as it cannot test MOSIP helm/charts deployment due to dependencies issues
      #- name: Create kind v1.21.1 cluster
      #  uses: helm/kind-action@v1.4.0
      #  with:
      #    node_image: kindest/node:v1.21.1
      #
      #- name: Run chart-testing (install)
      #  run: |
      #    while read -r chart; do
      #      echo -e "\nCHART: $chart\n";
      #      ct install --config=.github/chart-testing-config.yaml --charts=$chart --remote=target_repo --target-branch=$TARGET_BRANCH;
      #    done < ./list.txt
